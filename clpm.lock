;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; This is autogenerated by CLPM. Do not edit by hand.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(:api-version "0.3")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; BEGIN SOURCES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

:sources
(:implicit-file :type :file-system :system-files
 ("pngload.asd" "pngload.test.asd"))
(:implicit-vcs :type :vcs :projects
 (("3bz" :github :path "3b/3bz")
  ("alexandria" :gitlab :host "gitlab.common-lisp.net" :path
   "alexandria/alexandria")
  ("cffi" :github :path "cffi/cffi")
  ("local-time" :github :path "dlowe-net/local-time")
  ("mmap" :github :path "Shinmera/mmap")
  ("opticl" :github :path "slyrus/opticl")
  ("parse-float" :github :path "soemraws/parse-float")
  ("png-read" :github :path "Ramarren/png-read")
  ("static-vectors" :github :path "sionescu/static-vectors")
  ("swap-bytes" :github :path "sionescu/swap-bytes")
  ("zpb-exif" :github :path "xach/zpb-exif")))
("quicklisp" :url "https://beta.quicklisp.org/dist/quicklisp.txt" :type
 :quicklisp)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; BEGIN REQUIREMENTS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

:requirements
(:project :name "png-read" :branch "master" :source :implicit-vcs)
(:project :name "opticl" :branch "master" :source :implicit-vcs)
(:project :name "local-time" :branch "master" :source :implicit-vcs)
(:asd-file :name "pngload.test.asd")
(:project :name "zpb-exif" :branch "master" :source :implicit-vcs)
(:project :name "swap-bytes" :branch "master" :source :implicit-vcs)
(:project :name "static-vectors" :branch "master" :source :implicit-vcs)
(:project :name "parse-float" :branch "master" :source :implicit-vcs)
(:project :name "mmap" :branch "master" :source :implicit-vcs)
(:project :name "cffi" :branch "master" :source :implicit-vcs)
(:project :name "alexandria" :branch "master" :source :implicit-vcs)
(:project :name "3bz" :branch "master" :source :implicit-vcs)
(:asd-file :name "pngload.asd")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; BEGIN RELEASES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

:releases
("3bz" :version (:commit "569614c40408f3aefc77ba233e0e4bd66d3850ad") :source
 :implicit-vcs :systems ("3bz"))
("alexandria" :version (:commit "49e82add16cb9f1ffa72c77cd687271247181ff3")
 :source :implicit-vcs :systems ("alexandria" "alexandria-tests"))
("anaphora" :version "2021-01-24" :source "quicklisp" :systems ("anaphora"))
("asdf-flv" :version "2016-04-21" :source "quicklisp" :systems
 ("net.didierverna.asdf-flv"))
("asdf-system-connections" :version "2017-01-24" :source "quicklisp" :systems
 ("asdf-system-connections"))
("babel" :version "2020-09-25" :source "quicklisp" :systems ("babel"))
("bordeaux-threads" :version "2020-06-10" :source "quicklisp" :systems
 ("bordeaux-threads"))
("cffi" :version (:commit "743a90251e5a4407147a20bd8354df03a87ca46d") :source
 :implicit-vcs :systems
 ("cffi" "cffi-examples" "cffi-grovel" "cffi-libffi" "cffi-tests"
  "cffi-tests/example" "cffi-toolchain" "cffi-uffi-compat" "cffi/c2ffi"
  "cffi/c2ffi-generator" "uffi"))
("chipz" :version "2021-08-07" :source "quicklisp" :systems ("chipz"))
("cl-base64" :version "2020-10-16" :source "quicklisp" :systems ("cl-base64"))
("cl-containers" :version "2020-04-27" :source "quicklisp" :systems
 ("cl-containers"))
("cl-jpeg" :version "2017-06-30" :source "quicklisp" :systems ("cl-jpeg"))
("cl-json" :version "2014-12-17" :source "quicklisp" :systems ("cl-json"))
("cl-markdown" :version "2019-12-27" :source "quicklisp" :systems
 ("cl-markdown"))
("cl-ppcre" :version "2019-05-21" :source "quicklisp" :systems ("cl-ppcre"))
("cl-tga" :version "2016-03-18" :source "quicklisp" :systems ("cl-tga"))
("deflate" :version "2020-02-18" :source "quicklisp" :systems ("deflate"))
("documentation-utils" :version "2019-07-11" :source "quicklisp" :systems
 ("documentation-utils"))
("dynamic-classes" :version "2013-01-28" :source "quicklisp" :systems
 ("dynamic-classes"))
("fiveam" :version "2020-09-25" :source "quicklisp" :systems ("fiveam"))
("flexi-streams" :version "2021-08-07" :source "quicklisp" :systems
 ("flexi-streams"))
("form-fiddle" :version "2019-07-11" :source "quicklisp" :systems
 ("form-fiddle"))
("hu.dwim.stefil" :version "2020-02-18" :source "quicklisp" :systems
 ("hu.dwim.stefil"))
("ieee-floats" :version "2017-08-30" :source "quicklisp" :systems
 ("ieee-floats"))
("ironclad" :version "2021-04-11" :source "quicklisp" :systems ("ironclad"))
("iterate" :version "2021-05-31" :source "quicklisp" :systems ("iterate"))
("local-time" :version (:commit "a177eb911c0e8116e2bfceb79049265a884b701b")
 :source :implicit-vcs :systems
 ("cl-postgres+local-time" "local-time" "local-time/test"))
("md5" :version "2021-06-30" :source "quicklisp" :systems ("md5"))
("metabang-bind" :version "2020-02-18" :source "quicklisp" :systems
 ("metabang-bind"))
("metatilities-base" :version "2019-12-27" :source "quicklisp" :systems
 ("metatilities-base"))
("mmap" :version (:commit "ff683459b01ce3e7404dfdad07aa95e6ab2bba49") :source
 :implicit-vcs :systems ("mmap" "mmap-test"))
("monkeylib-binary-data" :version "2011-12-03" :source "quicklisp" :systems
 ("com.gigamonkeys.binary-data"))
("nibbles" :version "2021-05-31" :source "quicklisp" :systems ("nibbles"))
("opticl" :version (:commit "7836cb04bebbadb2311656f5e6607251859cf1b7") :source
 :implicit-vcs :systems ("opticl" "opticl-doc" "opticl/test"))
("opticl-core" :version "2017-10-19" :source "quicklisp" :systems
 ("opticl-core"))
("parachute" :version "2021-08-07" :source "quicklisp" :systems ("parachute"))
("parse-float" :version (:commit "3074765101e41222b6b624a66aaf1e6416379f9c")
 :source :implicit-vcs :systems ("parse-float"))
("png-read" :version (:commit "ec29f38a689972b9f1373f13bbbcd6b05deada88")
 :source :implicit-vcs :systems ("png-read"))
("pngload.asd" :version :newest :source :implicit-file :systems ("pngload"))
("pngload.test.asd" :version :newest :source :implicit-file :systems
 ("pngload.test"))
("postmodern" :version "2021-08-07" :source "quicklisp" :systems
 ("cl-postgres"))
("retrospectiff" :version "2017-10-19" :source "quicklisp" :systems
 ("retrospectiff"))
("rt" :version "2010-10-07" :source "quicklisp" :systems ("rt"))
("salza2" :version "2013-07-20" :source "quicklisp" :systems ("salza2"))
("skippy" :version "2015-04-07" :source "quicklisp" :systems ("skippy"))
("split-sequence" :version "2021-05-31" :source "quicklisp" :systems
 ("split-sequence"))
("static-vectors" :version (:commit "89fa07afcc3c0fb53b66361c29f85220b10c0bca")
 :source :implicit-vcs :systems ("static-vectors" "static-vectors/test"))
("swap-bytes" :version (:commit "253ab928b91b8a1c3cea0434e87b8da5ce3c6014")
 :source :implicit-vcs :systems ("swap-bytes" "swap-bytes/test"))
("trivial-backtrace" :version "2020-06-10" :source "quicklisp" :systems
 ("trivial-backtrace"))
("trivial-features" :version "2021-04-11" :source "quicklisp" :systems
 ("trivial-features"))
("trivial-gray-streams" :version "2021-01-24" :source "quicklisp" :systems
 ("trivial-gray-streams"))
("trivial-indent" :version "2021-05-31" :source "quicklisp" :systems
 ("trivial-indent"))
("uax-15" :version "2021-05-31" :source "quicklisp" :systems ("uax-15"))
("usocket" :version "2019-12-27" :source "quicklisp" :systems ("usocket"))
("zpb-exif" :version (:commit "ee8a467614072edd0a5ddd256df0f459b1b84d49")
 :source :implicit-vcs :systems ("zpb-exif"))
("zpng" :version "2015-04-07" :source "quicklisp" :systems ("zpng"))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; BEGIN REVERSE-DEPENDENCIES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

:reverse-dependencies
("3bz" ((:system :name "pngload") (:system :name "3bz"))
 (t (:project :name "3bz" :branch "master" :source :implicit-vcs)))

("alexandria" ((:system :name "static-vectors") (:system :name "alexandria"))
 ((:system :name "pngload.test") (:system :name "alexandria"))
 ((:system :name "pngload") (:system :name "alexandria"))
 ((:system :name "parse-float") (:system :name "alexandria"))
 ((:system :name "opticl-doc") (:system :name "alexandria"))
 ((:system :name "opticl-core") (:system :name "alexandria"))
 ((:system :name "opticl") (:system :name "alexandria"))
 ((:system :name "mmap-test") (:system :name "alexandria"))
 ((:system :name "hu.dwim.stefil") (:system :name "alexandria"))
 ((:system :name "fiveam") (:system :name "alexandria"))
 ((:system :name "com.gigamonkeys.binary-data") (:system :name "alexandria"))
 ((:system :name "cffi/c2ffi") (:system :name "alexandria"))
 ((:system :name "cffi-grovel") (:system :name "alexandria"))
 ((:system :name "cffi") (:system :name "alexandria"))
 ((:system :name "bordeaux-threads") (:system :name "alexandria"))
 ((:system :name "babel") (:system :name "alexandria"))
 ((:system :name "alexandria-tests") (:system :name "alexandria"))
 ((:system :name "3bz") (:system :name "alexandria"))
 (t (:project :name "alexandria" :branch "master" :source :implicit-vcs)))

("anaphora" ((:system :name "cl-markdown") (:system :name "anaphora")))

("asdf-flv"
 ((:system :name "fiveam") (:system :name "net.didierverna.asdf-flv")))

("asdf-system-connections"
 ((:system :name "cl-containers") (:system :name "asdf-system-connections")))

("babel" ((:system :name "png-read") (:system :name "babel"))
 ((:system :name "cffi") (:system :name "babel"))
 ((:system :name "3bz") (:system :name "babel")))

("bordeaux-threads"
 ((:system :name "ironclad") (:system :name "bordeaux-threads"))
 ((:system :name "cffi-tests") (:system :name "bordeaux-threads")))

("cffi" ((:system :name "uffi") (:system :name "cffi-uffi-compat"))
 ((:system :name "static-vectors/test") (:system :name "cffi-grovel"))
 ((:system :name "static-vectors") (:system :name "cffi"))
 ((:system :name "static-vectors") (:system :name "cffi-grovel"))
 ((:system :name "static-vectors") (:system :name "cffi-grovel"))
 ((:system :name "pngload") (:system :name "cffi"))
 ((:system :name "mmap-test") (:system :name "cffi"))
 ((:system :name "mmap") (:system :name "cffi"))
 ((:system :name "cffi/c2ffi-generator") (:system :name "cffi/c2ffi"))
 ((:system :name "cffi/c2ffi") (:system :name "cffi"))
 ((:system :name "cffi-uffi-compat") (:system :name "cffi"))
 ((:system :name "cffi-toolchain") (:system :name "cffi"))
 ((:system :name "cffi-tests/example") (:system :name "cffi-grovel"))
 ((:system :name "cffi-tests/example") (:system :name "cffi-grovel"))
 ((:system :name "cffi-tests") (:system :name "cffi-grovel"))
 ((:system :name "cffi-tests") (:system :name "cffi-libffi"))
 ((:system :name "cffi-tests") (:system :name "cffi-grovel"))
 ((:system :name "cffi-libffi") (:system :name "cffi"))
 ((:system :name "cffi-libffi") (:system :name "cffi-grovel"))
 ((:system :name "cffi-libffi") (:system :name "cffi-grovel"))
 ((:system :name "cffi-libffi") (:system :name "cffi-grovel"))
 ((:system :name "cffi-grovel") (:system :name "cffi"))
 ((:system :name "cffi-grovel") (:system :name "cffi-toolchain"))
 ((:system :name "cffi-examples") (:system :name "cffi"))
 ((:system :name "3bz") (:system :name "cffi"))
 (t (:project :name "cffi" :branch "master" :source :implicit-vcs)))

("chipz" ((:system :name "png-read") (:system :name "chipz")))

("cl-base64" ((:system :name "cl-postgres") (:system :name "cl-base64")))

("cl-containers"
 ((:system :name "cl-markdown") (:system :name "cl-containers")))

("cl-jpeg" ((:system :name "retrospectiff") (:system :name "cl-jpeg"))
 ((:system :name "opticl") (:system :name "cl-jpeg")))

("cl-json" ((:system :name "cffi/c2ffi-generator") (:system :name "cl-json")))

("cl-markdown" ((:system :name "opticl-doc") (:system :name "cl-markdown")))

("cl-ppcre" ((:system :name "uax-15") (:system :name "cl-ppcre"))
 ((:system :name "cl-markdown") (:system :name "cl-ppcre"))
 ((:system :name "cffi/c2ffi-generator") (:system :name "cl-ppcre")))

("cl-tga" ((:system :name "opticl") (:system :name "cl-tga")))

("deflate" ((:system :name "retrospectiff") (:system :name "deflate")))

("documentation-utils"
 ((:system :name "parachute") (:system :name "documentation-utils"))
 ((:system :name "mmap") (:system :name "documentation-utils"))
 ((:system :name "form-fiddle") (:system :name "documentation-utils")))

("dynamic-classes"
 ((:system :name "cl-markdown") (:system :name "dynamic-classes")))

("fiveam" ((:system :name "swap-bytes/test") (:system :name "fiveam"))
 ((:system :name "static-vectors/test") (:system :name "fiveam"))
 ((:system :name "opticl/test") (:system :name "fiveam")))

("flexi-streams"
 ((:system :name "retrospectiff") (:system :name "flexi-streams")))

("form-fiddle" ((:system :name "parachute") (:system :name "form-fiddle")))

("hu.dwim.stefil"
 ((:system :name "local-time/test") (:system :name "hu.dwim.stefil")))

("ieee-floats" ((:system :name "retrospectiff") (:system :name "ieee-floats")))

("ironclad" ((:system :name "cl-postgres") (:system :name "ironclad")))

("iterate" ((:system :name "png-read") (:system :name "iterate")))

("local-time" ((:system :name "pngload.test") (:system :name "local-time"))
 ((:system :name "local-time/test") (:system :name "local-time"))
 ((:system :name "cl-postgres+local-time") (:system :name "local-time"))
 (t (:project :name "local-time" :branch "master" :source :implicit-vcs)))

("md5" ((:system :name "cl-postgres") (:system :name "md5")))

("metabang-bind"
 ((:system :name "cl-markdown") (:system :name "metabang-bind")))

("metatilities-base"
 ((:system :name "dynamic-classes") (:system :name "metatilities-base"))
 ((:system :name "cl-markdown") (:system :name "metatilities-base"))
 ((:system :name "cl-containers") (:system :name "metatilities-base")))

("mmap" ((:system :name "pngload") (:system :name "mmap"))
 ((:system :name "mmap-test") (:system :name "mmap"))
 ((:system :name "3bz") (:system :name "mmap"))
 (t (:project :name "mmap" :branch "master" :source :implicit-vcs)))

("monkeylib-binary-data"
 ((:system :name "retrospectiff")
  (:system :name "com.gigamonkeys.binary-data")))

("nibbles" ((:system :name "3bz") (:system :name "nibbles")))

("opticl" ((:system :name "pngload.test") (:system :name "opticl"))
 ((:system :name "opticl/test") (:system :name "opticl"))
 ((:system :name "opticl-doc") (:system :name "opticl"))
 (t (:project :name "opticl" :branch "master" :source :implicit-vcs)))

("opticl-core" ((:system :name "retrospectiff") (:system :name "opticl-core"))
 ((:system :name "opticl") (:system :name "opticl-core")))

("parachute" ((:system :name "mmap-test") (:system :name "parachute")))

("parse-float" ((:system :name "pngload") (:system :name "parse-float"))
 (t (:project :name "parse-float" :branch "master" :source :implicit-vcs)))

("png-read" ((:system :name "pngload.test") (:system :name "png-read"))
 (t (:project :name "png-read" :branch "master" :source :implicit-vcs)))

("pngload.asd" ((:system :name "pngload.test") (:system :name "pngload"))
 ((:system :name "opticl") (:system :name "pngload"))
 (t (:asd-file :name "pngload.asd")))

("pngload.test.asd" (t (:asd-file :name "pngload.test.asd")))

("postmodern"
 ((:system :name "cl-postgres+local-time") (:system :name "cl-postgres")))

("retrospectiff" ((:system :name "opticl") (:system :name "retrospectiff")))

("rt" ((:system :name "cffi-tests") (:system :name "rt")))

("salza2" ((:system :name "zpng") (:system :name "salza2")))

("skippy" ((:system :name "opticl") (:system :name "skippy")))

("split-sequence" ((:system :name "usocket") (:system :name "split-sequence"))
 ((:system :name "uax-15") (:system :name "split-sequence"))
 ((:system :name "cl-postgres") (:system :name "split-sequence")))

("static-vectors"
 ((:system :name "static-vectors/test") (:system :name "static-vectors"))
 ((:system :name "pngload") (:system :name "static-vectors"))
 (t (:project :name "static-vectors" :branch "master" :source :implicit-vcs)))

("swap-bytes" ((:system :name "swap-bytes/test") (:system :name "swap-bytes"))
 ((:system :name "pngload") (:system :name "swap-bytes"))
 (t (:project :name "swap-bytes" :branch "master" :source :implicit-vcs)))

("trivial-backtrace"
 ((:system :name "fiveam") (:system :name "trivial-backtrace")))

("trivial-features"
 ((:system :name "swap-bytes/test") (:system :name "trivial-features"))
 ((:system :name "swap-bytes") (:system :name "trivial-features"))
 ((:system :name "swap-bytes") (:system :name "trivial-features"))
 ((:system :name "swap-bytes") (:system :name "trivial-features"))
 ((:system :name "mmap") (:system :name "trivial-features"))
 ((:system :name "mmap") (:system :name "trivial-features"))
 ((:system :name "cffi-tests/example") (:system :name "trivial-features"))
 ((:system :name "cffi-tests") (:system :name "trivial-features"))
 ((:system :name "cffi-libffi") (:system :name "trivial-features"))
 ((:system :name "cffi-libffi") (:system :name "trivial-features"))
 ((:system :name "cffi-libffi") (:system :name "trivial-features"))
 ((:system :name "cffi") (:system :name "trivial-features"))
 ((:system :name "babel") (:system :name "trivial-features"))
 ((:system :name "3bz") (:system :name "trivial-features")))

("trivial-gray-streams"
 ((:system :name "flexi-streams") (:system :name "trivial-gray-streams")))

("trivial-indent"
 ((:system :name "documentation-utils") (:system :name "trivial-indent")))

("uax-15" ((:system :name "cl-postgres") (:system :name "uax-15")))

("usocket" ((:system :name "cl-postgres") (:system :name "usocket")))

("zpb-exif" ((:system :name "pngload") (:system :name "zpb-exif"))
 (t (:project :name "zpb-exif" :branch "master" :source :implicit-vcs)))

("zpng" ((:system :name "opticl") (:system :name "zpng")))

